============================
doctest for 2-matrix_divided.py
============================
``matrix_divided()`` divides all elements of a matrix

SUCCESSFUL TEST CONDITIONS
==========================
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[9, 12, 15], [3, 21, 24]], 3)
[[3.0, 4.0, 5.0], [1.0, 7.0, 8.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], '2')
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [4, 5], [7, 8, 9]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size


>>> matrix_divided([[1, 2, 3], [4, 'five', 6], [7, 8, 9]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([], 2)
[]

>>> matrix_divided([[1000, 2000, 3000], [4000, 5000, 6000], [7000, 8000, 9000]], 100)
[[10.0, 20.0, 30.0], [40.0, 50.0, 60.0], [70.0, 80.0, 90.0]]

>>> matrix_divided([[-1, -2, -3], [-4, -5, -6], [-7, -8, -9]], -2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

